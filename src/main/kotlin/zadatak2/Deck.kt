package zadatak2

class Deck {
    val deck = mutableListOf<Card>()

    init {
        deck.add(Card(Rank.TWO, Suit.CLUBS))
        deck.add(Card(Rank.THREE, Suit.CLUBS))
        deck.add(Card(Rank.FOUR, Suit.CLUBS))
        deck.add(Card(Rank.FIVE, Suit.CLUBS))
        deck.add(Card(Rank.SIX, Suit.CLUBS))
        deck.add(Card(Rank.SEVEN, Suit.CLUBS))
        deck.add(Card(Rank.EIGHT, Suit.CLUBS))
        deck.add(Card(Rank.NINE, Suit.CLUBS))
        deck.add(Card(Rank.TEN, Suit.CLUBS))
        deck.add(Card(Rank.JACK, Suit.CLUBS))
        deck.add(Card(Rank.QUEEN, Suit.CLUBS))
        deck.add(Card(Rank.KING, Suit.CLUBS))
        deck.add(Card(Rank.ACE, Suit.CLUBS))

        deck.add(Card(Rank.TWO, Suit.DIAMONDS))
        deck.add(Card(Rank.THREE, Suit.DIAMONDS))
        deck.add(Card(Rank.FOUR, Suit.DIAMONDS))
        deck.add(Card(Rank.FIVE, Suit.DIAMONDS))
        deck.add(Card(Rank.SIX, Suit.DIAMONDS))
        deck.add(Card(Rank.SEVEN, Suit.DIAMONDS))
        deck.add(Card(Rank.EIGHT, Suit.DIAMONDS))
        deck.add(Card(Rank.NINE, Suit.DIAMONDS))
        deck.add(Card(Rank.TEN, Suit.DIAMONDS))
        deck.add(Card(Rank.JACK, Suit.DIAMONDS))
        deck.add(Card(Rank.QUEEN, Suit.DIAMONDS))
        deck.add(Card(Rank.KING, Suit.DIAMONDS))
        deck.add(Card(Rank.ACE, Suit.DIAMONDS))

        deck.add(Card(Rank.TWO, Suit.HEARTS))
        deck.add(Card(Rank.THREE, Suit.HEARTS))
        deck.add(Card(Rank.FOUR, Suit.HEARTS))
        deck.add(Card(Rank.FIVE, Suit.HEARTS))
        deck.add(Card(Rank.SIX, Suit.HEARTS))
        deck.add(Card(Rank.SEVEN, Suit.HEARTS))
        deck.add(Card(Rank.EIGHT, Suit.HEARTS))
        deck.add(Card(Rank.NINE, Suit.HEARTS))
        deck.add(Card(Rank.TEN, Suit.HEARTS))
        deck.add(Card(Rank.JACK, Suit.HEARTS))
        deck.add(Card(Rank.QUEEN, Suit.HEARTS))
        deck.add(Card(Rank.KING, Suit.HEARTS))
        deck.add(Card(Rank.ACE, Suit.HEARTS))

        deck.add(Card(Rank.TWO, Suit.SPADES))
        deck.add(Card(Rank.THREE, Suit.SPADES))
        deck.add(Card(Rank.FOUR, Suit.SPADES))
        deck.add(Card(Rank.FIVE, Suit.SPADES))
        deck.add(Card(Rank.SIX, Suit.SPADES))
        deck.add(Card(Rank.SEVEN, Suit.SPADES))
        deck.add(Card(Rank.EIGHT, Suit.SPADES))
        deck.add(Card(Rank.NINE, Suit.SPADES))
        deck.add(Card(Rank.TEN, Suit.SPADES))
        deck.add(Card(Rank.JACK, Suit.SPADES))
        deck.add(Card(Rank.QUEEN, Suit.SPADES))
        deck.add(Card(Rank.KING, Suit.SPADES))
        deck.add(Card(Rank.ACE, Suit.SPADES))
    }

}